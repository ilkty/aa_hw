getwd()
shiny::runApp('~/hw_asset_allocation/shiny_assetAllocation')
runApp('~/hw_asset_allocation/shiny_assetAllocation')
runApp()
runApp()
runApp('~/hw_asset_allocation/shiny_assetAllocation')
runApp()
runApp('~/hw_asset_allocation/shiny_assetAllocation')
runApp('~/hw_asset_allocation/shiny_assetAllocation')
runApp('~/hw_asset_allocation/shiny_assetAllocation')
getwd()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
getwd()
runApp()
runApp()
devtools::session_info()
getwd()
rsconnect()
devtools::install_github
rsconnect()
install.packages("rsconnect")
install.packages("rsconnect")
shiny::runApp()
runApp()
rsconnect()
library(rsconnect)
rsconnect
rsconnect()
rsconnect()
rsconnect::accountInfo()
rsconnect::accounts()
check()
library(devtools)
check()
getwd()
devtools::check()
install()
install.packages("devtools")
install.packages("devtools")
library("devtools")
check()
devtools::check()
library(rsconnect)
deployApp()
shiny::runApp()
## app.R ##
Packages <- c("shiny", "shinydashboard","reshape2","ggplot2","PerformanceAnalytics","corrplot","rsconnect")
lapply(Packages, githubinstall, character.only = TRUE)
install_github(shiny)
install_github("shiny")
install_github(shiny)
library(devtools)
install_github(shiny)
install_github("shiny")
install_github("dplyr")
install_github(dplyr)
library(devtools)
install_github("hadley/dplyr")
install_github("hadley/dplyr")
install_github("hadley/dplyr")
library(githubinstall)
install.packages(githubinstall)
install.packages("githubinstall")
githubinstall("dplyr")
library(githubinstall)
githubinstall("dplyr")
githubinstall(reshape2)
githubinstall("reshape2")
githubinstall("ggplot2")
githubinstall("shinyboard")
githubinstall("PerformancneAnalytics")
githubinstall("corrplot")
githubinstall("TTR")
githubinstall("rsconnect")
deployApp
deployApp()
runApp()
runApp()
session_info()
deployApp()
runApp()
library(curl)
library("curl")
githubinstall("curl")
install.packages("curl")
install.packages("curl")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
require(dplyr)
runApp()
require(shiny)
require(dplyr)
require(reshape2)
require(ggplot2)
require(shinydashboard)
require(PerformanceAnalytics)
require(corrplot)
require(TTR)
require(rsconnect)
require(curl)
runApp()
runApp()
githubinstall("dplyr")
library(githubinstall)
githubinstall("dplyr")
runApp()
githubinstall(dplyr)
githubinstall("dplyr")
runApp()
require(shiny)
require(dplyr)
require(reshape2)
require(ggplot2)
require(shinydashboard)
require(PerformanceAnalytics)
require(corrplot)
require(TTR)
require(rsconnect)
require(curl)
runApp()
## app.R ##
Packages <- c("shiny", "shinydashboard","reshape2","ggplot2","PerformanceAnalytics","corrplot","rsconnect")
lapply(Packages, install.packages, character.only = TRUE)
shiny::runApp()
shiny::runApp()
library(rsconnect)
deployApp()
devtools::install_github("shiny")
libraray(devtools)
library("devtools")
install.packages("devtools", repos="http://cloud.r-project.org")
devtools::install_github("shiny")
library(devtools)
library("devtools")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("dplyr")
install.packages("reshape2")
install.packages("ggplot2")
install.packages("shinyboard")
install.packages("PerformanceAnlytics")
install.packages("corrplot")
install.packages("TTR")
install.packages("rsconnect")
install.packages("curl")
shiny::runApp()
shiny::runApp()
require(shiny)
require(dplyr)
require(reshape2)
require(ggplot2)
require(shinydashboard)
require(PerformanceAnalytics)
require(corrplot)
require(TTR)
require(rsconnect)
require(curl)
install.packages("pillar")
runApp()
deployApp()
install.packages("devtools", repos="http://cloud.r-project.org")
rsconnect::setAccountInfo(name='sseo64', token='0141A1DA270F03391A1EB4BD92F9C2EE', secret='V998disDneIP1Ng7H4vQBANLqr+qbKmiK3aePDZG')
runApp()
require(shiny)
require(dplyr)
require(reshape2)
require(ggplot2)
require(shinydashboard)
require(PerformanceAnalytics)
require(corrplot)
require(TTR)
require(rsconnect)
require(curl)
## app.R ##
Packages <- c("shiny", "shinydashboard","reshape2","ggplot2","PerformanceAnalytics","corrplot","rsconnect")
lapply(Packages, install.packages, character.only = TRUE)
## app.R ##
Packages <- c("shiny", "shinydashboard","reshape2","ggplot2","PerformanceAnalytics","corrplot","rsconnect","TTR","dplyr","curl")
lapply(Packages, install.packages, character.only = TRUE)
install.packages(c("dplyr", "TTR"))
shiny::runApp()
sessionInfo()
packageDescription()
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
install.packages("tools")
package_version()
packageDescription()
shiny::runApp()
require(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
runApp()
rsconnect::appDependencies()
update.packages("TTR")
rsconnect::appDependencies()
runApp()
install.packages("shiny")
rsconnect::appDependencies()
install.packages("TTR")
rsconnect::appDependencies()
shiny::runApp()
runApp()
runApp()
rsconnect::showLogs()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
runApp()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
example(shiny)
example(shinyApp\)
example(shinyApp)
runExample()
runExample("01_hello")
runExample("11_timer")
runExample("170_func")
runExample("02")
runExample("02_text")
data(dataset)
data(datasets)
runExample("02_text")
runExample("03_reactivity")
runExample("02_text")
runExample(
)
runExample("04_mpg
")
runExample("04_mpg")
runExample("05_sliders")
runExample("06_widget")
runExample("06_widgets")
runExample("07_widgets")
runExample("08_html")
runExample("09_upload")
library(dplyr)
library(PerformanceAnalytics)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
library(dplyr)
library(PerformanceAnalytics)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
install.packages("ggcorrplot")
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#FC4E07", "white", "#00AFBB"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
Year <- as.factor(format(index(cross_assets_m),'%Y'))
chart.Correlation(cross_assets_m,bg=seq(1:12)[Year],pch=21)
corr <- round(cor(cross_assets_m),1)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#00AFBB", "white", "#FC4E07"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
corr <- round(cor(cross_assets_m),2)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#00AFBB", "white", "#FC4E07"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
corr <- round(cor(cross_assets_m),3)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = TRUE, type = "lower",
color = c("#00AFBB", "white", "#FC4E07"),
outline.col = "white", lab = TRUE)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE)
corr <- round(cor(cross_assets_m),3)
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = FALSE, type = "lower",
color = c("#00AFBB", "white", "#FC4E07"),
outline.col = "white", lab = TRUE)
??cor_pmat()
??cor_pmat
cor_pmat()
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2015-01-01/2019-12-31']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2019-07-01/2019-12-31']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2020-01-01/2020-04-30']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
corrplot(cor(assets), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
library(dplyr)
library(PerformanceAnalytics)
library(ggcorrplot)
fluidPage(
cross_assets <- readRDS("cross_assets.RDS") %>% na.omit,
cross_assets_m <- to.monthly(cross_assets, indexAt = "lastOf", OHLC = FALSE),
corr <- round(cor(cross_assets_m),3),
ggcorrplot(corr, p.mat = cor_pmat(cross_assets_m),
hc.order = FALSE, type = "lower",
color = c("#00AFBB", "white", "#FC4E07"),
outline.col = "white", lab = TRUE)
)
install.packages("DT")
??years()
library(DT)
install.packages("lubridate")
data("faithful")
force(faithful)
head(data("faithful"))
head(data(faithful))
a<-data(faithful)
a
data("faithful")
rm(a)
faithful
# read RDS
rets_month_equity <- readRDS("equity_compact_monthlyReturn.RDS")
a2010 <- rets_month_equity[2010-01-01::]
a2010 <- rets_month_equity[2010-01-01::2019-12-31]
a2010 <- rets_month_equity['2010-01-01::']
head(a2010)
head(rets_month_equity)
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2020-01-01/2020-04-30']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
par(c(1,2))
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
plot(rsi, main = "RSI 5 days", xlab = "time", ylab = "RSI: 5days")
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2020-01-01/2020-04-30']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
par(mfrow = c(2, 2))
plot(rsi, main = "RSI 1 days", xlab = "time", ylab = "RSI: 5days")
plot(rsi, main = "RSI 2 days", xlab = "time", ylab = "RSI: 5days")
library(TTR)
prices_day_equity <- readRDS("equity_compact_daily.RDS")
prices_day_equity <- prices_day_equity['2020-01-01/2020-04-30']
rsi <- RSI(prices_day_equity$`MSCI ACWI`, n = 5)
par(mfrow = c(1, 2))
plot(rsi, main = "RSI 1 days", xlab = "time", ylab = "RSI: 5days")
plot(rsi, main = "RSI 2 days", xlab = "time", ylab = "RSI: 5days")
lines(dens, col = "blue")
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
a <- as.character(2020-01-01)
a
a <- as.character("2020-01-01")
a
prices_day_equity <- readRDS("equity_compact_daily.RDS")
a <- as.character("2020-01-01")
b <- as.character("2020-04-30")
prices_day_equity <- prices_day_equity[a&"::"$b]
prices_day_equity <- prices_day_equity["'"$a&"::"$b&"'"]
"'"$a&"::"$b&"'"
print("'"$a&"::"$b&"'")
print('$a&"::"$b&')
a&b
a
b
a&"::"&b
as.character(a)&"::"&as.character(b)
as.character(a)
1&&b
"a"&&"b"
a&&b
&&
??&
