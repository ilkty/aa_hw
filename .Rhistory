# Run the application
shinyApp(ui = ui, server = server)
cross_A
str(cross_A)
str(ccross_A_r)
str(cross_A_r)
head(cross_A_r)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
#cross_A <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r())
heatmap(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
str(cross_A_r)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r())
MAT
heatmap(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r())
print(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r())
print(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
str(cross_A)
str(cross_A_r)
cross_A_r
head(cross_A_r)
head(cross_A)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
head(cross_A_r)
head(cross_A)
index(cross_A_r)
index(cross_A)
head(cross_A)
head(cross_A_r)
dim(cross_A)
dim(cross_A_r)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
dim(cross_A_r)
cross_A
str(cross_A)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
str(cross_A_r)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
str(cross_A_r)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r())
print(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
head(cross_A_r)
cor(cross_A_r)
cor(cross_A_r[,-1])
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r[,-1]
print(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
MAT <- cor(filtered_cross_A_r[,-1]
print(MAT)
})
MAT <- cor(filtered_cross_A_r[,-1]
print(MAT)
})
MAT <- cor(filtered_cross_A_r[,-1]
print(MAT)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
MAT <- cor(filtered_cross_A_r[,-1])
print(MAT)
})
}
# Run the application
shinyApp(ui = ui, server = server)
MAT <- cor(filtered_cross_A_r[,-1])
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
ggplot(filtered_cross_A_r(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
#MAT <- cor(filtered_cross_A_r[,-1])
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(readxl)
library(dplyr)
library(ggplot2)
library(lubridate)
library(PerformanceAnalytics)
library(TTR)
library(xts)
library(ggcorrplot)
cross_A <- readRDS("cross_assets.RDS")
cross_A <- to.monthly(cross_A,indexAt = "lastOf", OHLC = FALSE)
cross_A_r <- Return.calculate(cross_A, method = "log") %>% na.omit
cross_A <- data.frame(date=index(cross_A), coredata(cross_A))
cross_A_r <- data.frame(date=index(cross_A_r), coredata(cross_A_r))
# Define UI for application
ui <- fluidPage(
# Application title
#titlePanel("Stock Financials Trend"),
# Sidebar with slider input to select date range
sidebarLayout(position = "left",
sidebarPanel(
dateRangeInput('days', 'Select a date range:',
start = Sys.Date() - 365,
end = Sys.Date(),
max = Sys.Date())),
mainPanel(
# Show a plot of the trend
plotOutput("plot01"),
plotOutput("plot02")
)
)
)
server <- function(input, output) {
filtered_df <- reactive({
cross_A %>%
filter(between(date, input$days[1], input$days[2]))
})
filtered_cross_A_r <- reactive({
cross_A_r %>%
filter(between(date, input$days[1], input$days[2]))
})
output$plot01 <- renderPlot({
ggplot(filtered_df(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
})
output$plot02 <- renderPlot({
ggplot(filtered_cross_A_r(), aes_string(x = "date", y = "MSCI.ACWI")) + geom_line() + geom_point() + ggtitle("ACWI plot")
#MAT <- cor(filtered_cross_A_r[,-1])
})
}
# Run the application
shinyApp(ui = ui, server = server)
